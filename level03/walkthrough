1) Transfert du fichier avec SCP en utilisant un port spécifié :
    scp -P 22222 level01@localhost:/home/users/level01/level01 .

2) On decompile le binaire, on obtient son code, ici les sécurités STACK CANARY et NX sont actives donc ca limite l'execution de code arbitraire ou corruption de la pile

3) Explication du code : 
    * Fonction main :
        - Elle demande à l'utilisateur de saisir un mot de passe
        - Le mot de passe saisi (input) est passé à la fonction test avec une valeur constante, 322424845
    * Fonction test :
        - Elle prend deux arguments : arg1 (le mot de passe utilisateur) et arg2 (la valeur constante 322424845)
        - La fonction calcule la différence entre arg2 et arg1 : diff = arg2 (322424845) - arg1
        - Cette différence est utilisée comme clé pour le déchiffrement XOR dans la fonction decrypt
    * Fonction decrypt :
        - Elle utilise le dechiffrement XOR. Le déchiffrement XOR est une méthode de cryptographie symétrique qui utilise l'opération logique "exclusive OR" (XOR) pour transformer les données
        - Elle reçoit la clé calculée par la fonction test.
        - Utilise cette clé pour déchiffrer une chaîne codée statique "Q}|u\sfg~sf{}|a3"` via une opération XOR caractère par caractère.
        - Après déchiffrement, la chaîne résultante est comparée à "Congratulations!".
        - Si la chaîne déchiffrée correspond à "Congratulations!", alors la fonction decrypt ouvre un shell (via system("/bin/sh")). Sinon, elle affiche "Invalid Password".

4) Dechiffrement : 
    Comme la fonction decrypt utilse une methode de chiffrement symetrique, l'object ici est de trouver la Key de dechiffrement.
    On sait que la chaine encodee est "Q}|u\sfg~sf{}|a3" et le resultat qu'on souhaite obtenir est "Congratulations!"
    XOR est reversible, c'est a dire que si on a deux bits A et B et qu'on les combine avec XOR on peut obtenir C, C = A XOR B, donc on peut obtenir aussi A si on connait B et c
    Dans notre cas, A est la Key qu'on recherche, B sera la lettre Q de "Q}|u\sfg~sf{}|a3" et C la lettre C de "Congratulations!"
    donc Key = Q XOR C = 18
    on peut ecrire un petit programme qui peut verifier cela : 
    
    #include <stdio.h>
    #include <string.h>

    int main() {
        char encoded[] = "Q}|u`sfg~sf{}|a3";
        char target[] = "Congratulations!";
        int key = target[0] ^ encoded[0]; // 'C' ^ 'Q'

        for (int i = 0; i < strlen(encoded); i++) {
            encoded[i] ^= key;
        }
        if (strcmp(encoded, target) == 0)
            printf("Key %d decrypts the encoded string to 'Congratulations!'\n", key);
        else
            printf("Key %d does not decrypt correctly.\n", key);
    }

5) Trouver le password : 
    Maintenant qu'on sait que la Key est de 18, on fait 322424845 (valeur statique dans le code) - 18 = 322424827
    Le password est : 322424827

6) level03@OverRide:~$ ./level03
    ***********************************
    *		level03		**
    ***********************************
    Password:322424827
    $ whoami
    level04
    $ cat /home/users/level04/.pass
    kgv3tkEb9h2mLkRsPkXRfc2mHbjMxQzvb2FrgKkf
