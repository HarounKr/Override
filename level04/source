int main(int argc, const char **argv, const char **envp) {
    int status;          
    char buffer[128];    
    int childExited;         
    int waitFlag;               
    pid_t pid;                
    pid = fork();             
    memset(buffer, 0, sizeof(buffer));
    childExited = 0;           

    if (pid) {
 
        do {
            wait(&status); 
            childExited = status;  
            if ((status & 0x7F) == 0 || ((status & 0x7F) + 1) >> 1 > 0) {
                puts("Child is exiting...");
                return 0;
            }
            waitFlag = ptrace(PTRACE_PEEKUSER, pid, 44, 0);
        } while (waitFlag != 11);
        puts("No exec() for you");
        kill(pid, SIGKILL);
    } else {
        prctl(PR_SET_PDEATHSIG, SIGKILL); 
        ptrace(PTRACE_TRACEME, 0, 0, 0);
        puts("Give me some shellcode, k");
        gets(buffer); 
    }
    return 0;
}
